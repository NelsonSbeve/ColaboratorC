name: .NET CI

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache .NET packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Start services with Docker Compose
        run: |
          docker-compose pull absantee
          docker-compose up -d
          docker-compose ps

      - name: Restore dependencies
        run: dotnet restore ColaboratorC.sln

      - name: Build
        run: dotnet build ColaboratorC.sln --no-restore --configuration Release

      - name: Stop services with Docker Compose
        if: always()
        run: docker-compose down

  tests:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Start services with Docker Compose
        run: |
          docker-compose up -d
          docker-compose ps

      - name: Wait for RabbitMQ to be healthy
        run: |
          for i in {1..10}; do
            if [ "$(docker inspect --format='{{json .State.Health.Status}}' $(docker-compose ps -q rabbitmq))" == "\"healthy\"" ]; then
              exit 0
            fi
            sleep 5
          done
          exit 1

      - name: Wait for PostgreSQL to be healthy
        run: |
          for i in {1..10}; do
            if [ "$(docker inspect --format='{{json .State.Health.Status}}' $(docker-compose ps -q postgres))" == "\"healthy\"" ]; then
              exit 0
            fi
            sleep 5
          done
          exit 1

      - name: Cache .NET packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore ColaboratorC.sln

      - name: Run Unit Tests
        run: dotnet test ColaboratorC.sln --filter FullyQualifiedName~Domain.Tests --configuration Release

      - name: Run Integration Tests
        run: dotnet test ColaboratorC.sln --filter FullyQualifiedName~WebApi.IntegrationTests --configuration Release

      - name: Upload Integration Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/

      - name: Stop services with Docker Compose
        if: always()
        run: docker-compose down
