version: '3.8'

services:
  webapi:
    image: absantee
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5041:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DB_CONNECTION=Host=postgres;Port=5432;Database=absantee;Username=postgres;Password=password
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
    networks:
      - absantee_network

  postgres:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=absantee
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - "postgres-data_1:/var/lib/postgresql/data"
    networks:
      - absantee_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"  # RabbitMQ main port
      - "15672:15672"  # RabbitMQ management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - absantee_network

networks:
  absantee_network:
    driver: bridge

volumes:
  postgres-data_1: